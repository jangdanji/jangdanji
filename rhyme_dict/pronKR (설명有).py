"""
라임 전용 발음 변환기
발음 변환기이지만 라임에 영향을 주지 않는 발음 변화는 무시함


라임에 영향을 주는 음운변동
1. 구개음화 (같이 -> 가치)

2. ㅎ 격음화 : ㄱㄷㅂㅈ 가 ㅋㅌㅍㅊ 로 됨
	ㄱㄷㅂㅈ + 초성 ㅎ
	국화 -> 구콰


3. 소리의 중화 (있어 -> 이써, 믿어 -> 미더)
	예외 : ㅇ, ㅎ
	잉어는 잉어고 닿아는 다아임 라임에 영향 안줌

4. 소리의 탈락 (밟아 -> 발바)

5. ㄳ ㄵ ㄼ ㄽ ㄾ ㅄ 이건 앞에꺼로 발음함

6. ㄺ ㄻ ㄿ 이건 뒤에꺼로 발음함-  닭 삶 읊다

7. 비음화


생각해보니 받침은 전혀 중요하지 않은 거 아님?
생각해보니 아닌거같다 발음하기 힘든 단어도 걸러내야됨
ex 급락률


"""


"""
이중포문으로 경우의 수를 전부 구하고 진행했다
탈락이 되는 경우 띄어쓰기로 공백을 메꿈

한 글자의 경우 문법이 맞지않아도 뒤 쪽에 그냥 갖다붙이는 걸로 하자 (가사의 시작부터 첫글자면 오류..)
ex) 그런 적 없다 -> 그런적, 없다
ex) 당신이 할 일이나 하쇼 -> 

한 글자 단어 어떡함?

뒤쪽에 갖다 붙인다고 치면 이렇게 나오면 문법이 맛이감

	ex 말해줘 한 번만 -> 말해줘한, 번만

앞쪽에 갖다 붙인다고 치면 이런식으로 나오면 또 안됨

	ex 응가싼 채 넘어짐 -> 응가싼, 채넘어짐


"""

import hgtk
import join

import re


input = "붙혀"


input = re.sub('[-=+,#/\?:^$.@*\"※~&%ㆍ!』\\‘|\(\)\[\]\<\>`\'…》]', '', input)
input = input.replace('\n', ' ')

input_list = input.split()


print(input_list)

for i in input_list:
	if len(i) == 1:
		pass


endrule = {
	'ㄱ' : 'ㄱ',
	'ㄲ' : 'ㄱ',
	'ㅋ' : 'ㄱ',
	'ㄴ' : 'ㄴ',
	'ㄷ' : 'ㄷ',
	'ㅌ' : 'ㄷ',
	'ㅅ' : 'ㄷ',
	'ㅆ' : 'ㄷ',
	'ㅈ' : 'ㄷ',
	'ㅊ' : 'ㄷ',
	'ㅎ' : 'ㄷ',
	'ㄹ' : 'ㄹ',
	'ㅁ' : 'ㅁ',
	'ㅂ' : 'ㅂ',
	'ㅍ' : 'ㅂ',
	'ㅇ' : 'ㅇ'
}
# ㅎ 격음화되는 자음

gyuk = {
		'ㄱ' : 'ㅋ',
		'ㄺ' : 'ㅋ',
		'ㄷ' : 'ㅌ',
		'ㅂ' : 'ㅍ',
		'ㄼ' : 'ㅍ',
		'ㅈ' : 'ㅊ',
		'ㄵ' : 'ㅊ'
		}

# 겹받침
gyup = {
	'ㄳ' : ['ㄱ', 'ㅅ'],
	'ㄵ' : ['ㄴ', 'ㅈ'],
	'ㄼ' : ['ㄹ', 'ㅂ'],
	'ㄽ' : ['ㄹ', 'ㅅ'],
	'ㄾ' : ['ㄹ', 'ㅌ'],
	'ㅄ' : ['ㅂ', 'ㅅ'],
	'ㄺ' : ['ㄹ', 'ㄱ'],
	'ㄻ' : ['ㄹ', 'ㅁ'],
	'ㄿ' : ['ㄹ', 'ㅍ']
	}

for w in input_list:

	print(w)

	w = hgtk.letter.decompose(w[-2]) + hgtk.letter.decompose(w[-1])
	word = ''

	for i in range(0, len(w)) : word += w[i]
	# print(word)

	mix = word[2] + word[3]

	# print(word)


	if len(word) == 4:
		pass

	# 제18항
	# ‘ㄱ(ㄲ, ㅋ, ㄳ, ㄺ), ㄷ(ㅅ, ㅆ, ㅈ, ㅊ, ㅌ, ㅎ), ㅂ(ㅍ, ㄼ, ㄿ, ㅄ)’은 ‘ㄴ, ㅁ’ 앞에서 [ㅇ, ㄴ, ㅁ]으로 발음한다.

	# ㄱ(ㄲ, ㅋ, ㄳ, ㄺ) 다음 ㄴㅁㄹ 오면 비음 : ex) 악명[앙명] 죽림[중림] 국물[궁물]
	elif mix in 'ㄱㄴ ㄱㅁ ㄱㄹ ㄲㄴ ㄲㅁ ㄲㄹ ㅋㄴ ㅋㅁ ㅋㄹ ㅌㄴ ㅌㅁ ㅌㄹ ㄳㄴ ㄳㅁ ㄳㄹ ㄺㄴ ㄺㅁ ㄺㄹ':
		mix = 'ㅇ' + mix[-1]

	# ㄷ(ㅅ, ㅆ, ㅈ, ㅊ, ㅌ, ㅎ) 다음 ㄴㅁㄹ 오면 비음 : ex) 걷는다[건는다] 옷맵시[온맵시] 
	elif mix in 'ㄷㄴ ㄷㅁ ㄷㄹ ㅅㄴ ㅅㅁ ㅅㄹ ㅆㄴ ㅆㅁ ㅆㄹ ㅈㄴ ㅈㅁ ㅈㄹ ㅊㄴ ㅊㅁ ㅊㄹ ㅌㄴ ㅌㅁ ㅌㄹ ㅎㄴ ㅎㅁ ㅎㄹ':
		mix = 'ㄴ' + mix[-1]

	# ㅂ(ㅍ, ㄼ, ㄿ, ㅄ) 다음 ㄴㅁㄹ 오면 비음 : 앞만[암만] 없나[엄나] 잡는다[잠는다]
	elif mix in 'ㅂㄴ ㅂㅁ ㅂㄹ ㅍㄴ ㅍㅁ ㅍㄹ ㄼㄴ ㄼㅁ ㄼㄹ ㄹㄴ ㄹㅁ ㄹㄹ ㅊㄴ ㅊㅁ ㅊㄹ ㅄㄴ ㅄㅁ ㅄㄹ':
		mix = 'ㅁ' + mix[-1]

	# 제12항　받침 'ㅎ'의 발음은 다음과 같다.
	# 1. 'ㅎ(ㄶ, ㅀ)' 뒤에 'ㄱ, ㄷ, ㅈ'이 결합되는 경우에는, 뒤 음절 첫소리와 합쳐서 [ㅋ, ㅌ, ㅊ]으로 발음한다.
	elif mix in 'ㅎㄱ ㅀㄱ ㄶㄱ ㅎㄷ ㅀㄷ ㄶㄷ ㅎㅈ ㅀㅈ ㄶㅈ': # ex : 않고 쌓고 
		mix = mix.replace('ㄱ', 'ㅋ').strip('ㅎ') \
				.replace('ㄷ', 'ㅌ').strip('ㅎ') \
				.replace('ㅈ', 'ㅊ').strip('ㅎ')

	# 1-1. 받침 'ㄱ(ㄺ), ㄷ, ㅂ(ㄼ), ㅈ(ㄵ)'이 뒤 음절 첫소리 'ㅎ'과 결합되는 경우에도 역시 두 소리를 합쳐서 [ㅋ, ㅌ, ㅍ, ㅊ]으로 발음한다.
	elif mix[0] in 'ㄱㄲㅋㄳㄺ' and mix[1] == 'ㅎ' and word[4] not in 'ㅣㅕ':
			mix = mix.replace(mix[0], 'ㅋ').strip('ㅎ')  # ex : 국화 약함
	elif mix[0] in 'ㄷㅆㅈㄵㅊㅌㅎㅂㅍㄼㄿㅄ' and mix[1] == 'ㅎ' and word[4] not in 'ㅣㅕ':
			mix = mix.replace(mix[0], 'ㅌ').strip('ㅎ') # ex : 꽃향
	elif mix[0] in 'ㅂㅍㄼㄿㅄ' and mix[1] == 'ㅎ' and word[4] not in 'ㅣㅕ':
			mix = mix.replace(mix[0], 'ㅍ').strip('ㅎ')  # ex :
	# ㄱㄴㄷㄹㅁㅂㅅㅇㅈㅊㅋㅌㅍㅎㄲㅆ   
	# ㄳㄵㄶㄺㄻㄼㄽㄾㄿㅀㅄ


	# ㄱ(ㄲ, ㅋ, ㄳ, ㄺ), ㄷ(ㅅ, ㅆ, ㅈ, ㅊ, ㅌ, ㅎ), ㅂ(ㅍ, ㄼ, ㄿ, ㅄ)
	# 박하 엮흠 ㅋ 한몫했다 밝힘 /ㄷ 웃형 웆형 꽃향 밭황 

	# 예외! 규정에 따라 'ㄷ'으로 발음되는 'ㅅ, ㅈ, ㅊ, ㅌ'의 경우에는 이에 준한다.
	# 옷 한 벌[오탄벌] 낮 한때[나탄때] 꽃 한 송이[꼬탄송이] 숱하다[수타다]	


	# # 2. 'ㅎ(ㄶ, ㅀ)' 뒤에 'ㅅ'이 결합되는 경우에는, 'ㅅ'을 [ㅆ]으로 발음한다.
	# elif mix in 'ㅎㅅ ㄶㅅ ㅀㅅ': # ex : 싫소 많소
	# 	mix = mix.replace('ㅅ', 'ㅆ')

	# 3. 'ㅎ' 뒤에 'ㄴ'이 결합되는 경우에는, [ㄴ]으로 발음한다. -> 놓는[논는] 않네[안네]
	elif mix in 'ㅎㄴ':
		mix = mix.replace('ㅎ', 'ㄴ')

	# # 3-1 'ㄶ, ㅀ' 뒤에 'ㄴ'이 결합되는 경우에는, 'ㅎ'을 발음하지 않는다. ->  않는[안는] 소리의 중화 예외
	elif mix in 'ㄶㄴ ㅀㄴ': 
		mix = mix.replace('ㄶ', 'ㄴ').replace('ㅀ', 'ㄹ')

	# 구개음화
	elif mix+word[4] in 'ㄷㅇㅣ':
		mix = mix.replace('ㄷ', 'ㅈ').replace('ㅇ', '')

	elif mix+word[4] in 'ㄷㅎㅣ ㄷㅎㅕ ㅌㅇㅣ ㅌㅎㅕ':
		mix = mix.replace('ㄷ', 'ㅊ').replace('ㅌ', 'ㅊ').replace('ㅎ', '').replace('ㅇ', '')


	elif mix[1] == 'ㅇ':

		# 4. 'ㅎ(ㄶ, ㅀ)' 뒤에 모음으로 시작된 어미나 접미사가 결합되는 경우에는, 'ㅎ'을 발음하지 않는다. 
		if mix in "ㅎㅇ ㄶㅇ ㅀㅇ" : # 예외 ex) 잉어 낳아 중요
			
			if mix == 'ㅎㅇ': 
				mix = 'ㅇ'
			elif mix == 'ㄶㅇ': 
				mix = 'ㄴ'
			elif mix == 'ㅀㅇ': 
				mix = 'ㄹ'

		# 종성이 겹받침이면 1째 종성, 2째 초성으로 각각 감
		elif mix[0] in 'ㄳㄵㄼㄽㄾㅄㄺㄻㄿ':
			mix = gyup[mix[0]][0] + gyup[mix[0]][1]
			
		else:
			mix = 'ㅇ'


	result = word.replace(word[2:4], mix)

	result = join.join_jamos(result)

	print(result)

	mix = ''
	word = ''






# 3. 'ㅎ' 뒤에 'ㄴ'이 결합되는 경우에는, [ㄴ]으로 발음한다.  # ex : 놓는[논는] 쌓네[싼네]



# 제19항　받침 'ㅁ, ㅇ' 뒤에 연결되는 'ㄹ'은 [ㄴ]으로 발음한다. -> ㄹ이 ㄴ 으로 바뀌는 수준이라서 라임엔 영향 x





# < 유음화 >
# ㄴㄹ 이 ㄹ 을 앞or뒤에 만나면 ㄹ이 됨 : 칼날 난로 신라



# word = chosung1 + jungsung1 + jongsung1 + chosung2 + jungsung2 + jongsung2
# print(word)



# if jongsung1


